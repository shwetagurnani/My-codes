class Solution {
public:
  int longestPalindrome(string s) {
    int odds = 0;
    for (char c='A'; c<='z'; c++)
        odds += count(s.begin(), s.end(), c) & 1;
    return s.size() - odds + (odds > 0);
}
};//count ki complexity it iterates n times for every char in for loop

class Solution {
public:
    int longestPalindrome(string s) {
        map<int,int>mp;
        for(auto it:s)
        {
            mp[it]++;
        }
        int co=0,sum=0;
        for(auto it:mp)
        {
            if(it.second%2!=0)
                co++;
            sum=sum+it.second;
        }
         sum=sum-co;
        if(co!=0)sum++;
        return sum;
    }
};

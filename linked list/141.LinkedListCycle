class Solution {
public:
    bool hasCycle(ListNode *head) {
       
         if(head==NULL)
         return 0;
        ListNode* ptr1=head;
        ListNode*ptr2=head->next;
        while(ptr2!=NULL&&ptr1!=ptr2)
        {
           ptr1=ptr1->next;
            if(ptr2->next!=NULL)
           ptr2=ptr2->next->next;
            else
                return 0;
            
        }
       // cout<<ptr2->val;
        if(ptr1==ptr2)
            return 1;
   
            return 0;
    }
};

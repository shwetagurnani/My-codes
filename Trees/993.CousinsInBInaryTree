/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
   int dx;
public:
    bool isCousins(TreeNode* root, int x, int y) {
       int dx=dfs(root,-1,x);
       int dy=dfs(root,-1,y);
       int xx=findParent(root,x,-1);
       int yy=findParent(root,y,-1);
       if(xx!=yy &&dx==dy)
       return true ;
        else
       return false;
    }
    int dfs(TreeNode* node,int depth,int child)
    {
        if(node==NULL)
           return 0;
        
        depth=depth+1;
        if(node->val==child)
            dx=depth;
       
        dfs(node->left,depth,child);
        dfs(node->right,depth,child);
        
        return dx;
    }
    int x=-1;
     int findParent(TreeNode* root,int child,int par)
    {
        if(root==NULL)
            return -1;
       
        if(root->val==child)
        {
            x=par;
            return 0;
        }
        else
        {
        findParent(root->left,child,root->val);
        findParent(root->right,child,root->val);
        return x;
        }
    
            
    }
  
    
};
